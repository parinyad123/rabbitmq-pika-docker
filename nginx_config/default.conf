# This file configures NGINX to act as a reverse proxy for RabbitMQ's Management UI, ensuring SSL/TLS security

server {
    listen 443 ssl; # Tells NGINX to listen on port 443 (the default HTTPS port) and use SSL/TLS encryption for incoming connections
    server_name localhost;  # The domain name or IP that NGINX will respond to. In this case, it's set to "localhost" for local access.
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/server_certificate.pem; # Path to the server's SSL certificate file (public key).
    ssl_certificate_key /etc/nginx/ssl/server_key.pem; Path to the server's private key file, used to decrypt SSL traffic. Needed to complete the encryption handshake.
    ssl_protocols TLSv1.2 TLSv1.3; Defines the allowed SSL/TLS versions for securing the connection. In this case, only TLS 1.2 and TLS 1.3 are allowed
    ssl_ciphers HIGH:!aNULL:!MD5; # Specifies which cipher suites to use for SSL. This ensures strong encryption without weak ciphers like MD5.

    # Proxy RabbitMQ Management UI
    # Defines the location block for handling all requests. The / means it will apply to all requests made to https://localhost/.
    location / {  
        proxy_pass https://rabbitmq_ssl_v04:15671; # This forwards all incoming traffic to the RabbitMQ Management UI, which is running on container rabbitmq_ssl_v03 and listening on port 15671 (the default HTTPS port for RabbitMQ Management).
        proxy_set_header Host $host;  # This forwards the Host header from the client to the backend. It helps preserve the original host when proxied.
        proxy_set_header X-Real-IP $remote_addr; # Forward the real IP address of the client making the request to the backend..
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Adds the client's original IP address to the X-Forwarded-For header. If there are multiple proxies involved, theyâ€™ll be added to the list.
        proxy_set_header X-Forwarded-Proto $scheme; # This forwards the original protocol (HTTP or HTTPS) used by the client to the backend.
    }
}