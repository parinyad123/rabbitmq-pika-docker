# This configuration file ensures that RabbitMQ communicates over SSL and sets up the Management UI with HTTPS.

listeners.ssl.default = 5671 # Enables SSL/TLS for RabbitMQ messaging on port 5671, the default port for RabbitMQ over SSL.
ssl_options.cacertfile = /etc/rabbitmq/certs/ca_certificate.pem # Path to the CA (Certificate Authority) certificate. RabbitMQ uses this to verify certificates from clients. This is crucial for ensuring trust in client-server SSL communication.
ssl_options.certfile = /etc/rabbitmq/certs/server_certificate.pem # Path to the server’s certificate, used to secure RabbitMQ’s communications.
ssl_options.keyfile = /etc/rabbitmq/certs/server_key.pem #  Path to the server’s private key, which is used for decrypting messages encrypted with the public certificate
ssl_options.verify = verify_peer # This enables RabbitMQ to verify the client’s certificate (client authentication). It's essential for establishing a secure mutual SSL/TLS connection.
ssl_options.fail_if_no_peer_cert = true # If a client does not provide a valid certificate, the connection will be terminated.

management.tcp.port       = 15672 
management.ssl.port       = 15671 # Enables SSL/TLS for the RabbitMQ Management UI on port 15671, the default HTTPS port for RabbitMQ Management.
management.ssl.cacertfile = /etc/rabbitmq/certs/ca_certificate.pem # Path to the CA certificate for verifying incoming SSL connections to the Management UI.
management.ssl.certfile = /etc/rabbitmq/certs/server_certificate.pem # Path to the SSL certificate used for securing the Management UI’s communications.
management.ssl.keyfile = /etc/rabbitmq/certs/server_key.pem # Path to the private key associated with the Management UI’s SSL certificate.